Bootstrap: localimage
From: nvcr.io/nvidia/pytorch:24.06-py3

%post
df -h /tmp
df -h /root


apt-get update
apt-get install -y libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
export DEBIAN_FRONTEND=noninteractive
apt-get update && apt-get install -y \
        python3-pip \
        python3-tk \
        libgl1-mesa-glx \
        libglib2.0-0 colmap

apt-get install -y \
     git \
     cmake \
     ninja-build \
     build-essential \
     libboost-program-options-dev \
     libboost-filesystem-dev \
     libboost-graph-dev \
     libboost-system-dev \
     libeigen3-dev \
     libflann-dev \
     libfreeimage-dev \
     libmetis-dev \
     libgoogle-glog-dev \
     libgtest-dev \
     libgmock-dev \
     libsqlite3-dev \
     libglew-dev \
     qtbase5-dev \
     libqt5opengl5-dev \
     libcgal-dev \
     libceres-dev \
     nvidia-cuda-toolkit \
     nvidia-cuda-toolkit-gcc

git clone https://github.com/colmap/colmap.git
cd colmap
mkdir build
cd build
cmake .. -GNinja
ninja
ninja install

apt-get update
apt-get install -y clang llvm libx11-6 libx11-dev libxext6 libxext-dev
export CC=clang
export CXX=clang++
export LLVM_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer
echo 'export LLVM_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer' >> ~/.bashrc
mkdir /root/large_tmp
export TMPDIR=/root/large_tmp
export TEMP=/root/large_tmp
export TMP=/root/large_tmp
df -h /root/large_tmp
echo $TMPDIR

clang --version
python --version
python -c "import torch; print(torch.__version__)"
nvcc --version
gcc --version
python -c "import torch; print(torch.version.cuda)"
python -c "import torch; print(\"Is CUDA available:\", torch.cuda.is_available())"
python -c "import torch; print(\"Current device:\", torch.cuda.current_device())"
python -c "import torch; print(\"GPU Name:\", torch.cuda.get_device_name(torch.cuda.current_device()))"

# Install PyTorch3D
pip install --no-cache-dir --no-build-isolation "git+https://github.com/facebookresearch/pytorch3d.git@v0.7.7"

# SuGaR dependencies
pip install plotly rich plyfile jupyterlab nodejs ipywidgets open3d PyMCubes
NVDIFRAST_BACKEND=PACKED pip install "git+https://github.com/NVlabs/nvdiffrast.git@v0.3.3"

# Install SuGaR stuff
pkg_dir="gaussian_splatting/submodules/diff-gaussian-rasterization"
pkg="diff_gaussian_rasterization"
pip install "git+https://github.com/michelgokan/SuGaR.git#egg=${pkg}&subdirectory=${pkg_dir}"

# Configure for simple_knn compilation
unset CCACHE_CPP2
unset CXXFLAGS
export CC=gcc
export CXX=g++
export CUDAHOSTCXX=/usr/bin/g++

# Prepare compiler flags to address FLT_MAX issue and other warnings
pkg_dir="gaussian_splatting/submodules/simple-knn"
pkg="simple_knn"
export CXXFLAGS="-include cfloat -Wno-macro-redefined -fPIC -std=c++17"
export LDFLAGS="-L/usr/local/cuda/lib64"

# Explicitly set CUDA architecture if needed (modify if your GPU compute capability is different)
export TORCH_CUDA_ARCH_LIST="7.5;8.0;8.6"

# Install simple_knn with no cache to avoid build conflicts
pip install --no-cache-dir "git+https://github.com/michelgokan/SuGaR.git#egg=${pkg}&subdirectory=${pkg_dir}"

# Test import to confirm successful installation
python -c "import simple_knn; print('simple_knn imported successfully')"

